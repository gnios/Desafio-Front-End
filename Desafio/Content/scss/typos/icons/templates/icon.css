/* Generated by grunt-webfont */

<% if (fontfaceStyles) { %>@font-face {
	font-family:"<%= fontBaseName %>";<% if (fontSrc1) { %>
	src:<%= fontSrc1 %>;<% }%>
	src:<%= fontSrc2 %>;
	font-weight:normal;
	font-style:normal;
}
<% } %>

	 
/*
* 1. Allow margin
* 2. Prevent inherit font style
* 4. Correct line-height
* 5. Better font rendering
*/
.<%= baseClass %> {
	font-family:"<%= fontBaseName %>";
	/* 1 */
	display:inline-block;
	 /* 2 */
	font-weight:normal;
	font-style:normal;
	 /* 4 */
	line-height: 1;
	speak:none;
	text-decoration:inherit;
	text-transform:none;
	 /* 5 */
	text-rendering:optimizeLegibility;
	-webkit-font-smoothing:antialiased;
	-moz-osx-font-smoothing:grayscale;
}

/* makes the font 33% larger relative to the icon container */
  /* Size modifiers
   ========================================================================== */

  .<%= baseClass %>-small:before {
	font-size: 150%;
	vertical-align: -10%;
  }
  .<%= baseClass %>-medium:before {
	font-size: 200%;
	vertical-align: -16%;
  }
  .<%= baseClass %>-large:before {
	font-size: 250%;
	vertical-align: -22%;
  }
/* Modifier: `uk-icon-spin`
   ========================================================================== */
  .<%= baseClass %>-spin {
	display: inline-block;
	-webkit-animation: <%= baseClass %>-spin 2s infinite linear;
	animation: <%= baseClass %>-spin 2s infinite linear;
  }

  /* Modifier: `uk-icon-button`
   ========================================================================== */
  .<%= baseClass %>-button {
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	display: inline-block;
	width: 35px;
	height: 35px;
	border-radius: 100%;
	background: #eeeeee;
	line-height: 35px;
	color: #444444;
	font-size: 18px;
	text-align: center;
  }
  /*
   * Hover
   * 1. Apply hover style also to focus state
   * 2. Remove default focus style
   */
  .<%= baseClass %>-button:hover,
  .<%= baseClass %>-button:focus {
	background-color: #f5f5f5;
	color: #444444;
	text-decoration: none;
	/* 2 */
	outline: none;
  }
  /* Active */
  .<%= baseClass %>-button:active {
	background-color: #dddddd;
	color: #444444;
  }

.<%= baseClass %>-ul {
  padding-left: 0;
  margin-left: 2.14285714em;
  list-style-type: none;
}
.<%= baseClass %>-ul > li {
  position: relative;
}
.<%= baseClass %>-li {
  position: absolute;
  left: -2.14285714em;
  width: 2.14285714em;
  top: 0.14285714em;
  text-align: center;
}
.<%= baseClass %>-li.<%= baseClass %>-lg {
  left: -1.85714286em;
}
.<%= baseClass %>-border {
  padding: .2em .25em .15em;
  border: solid 0.08em #eeeeee;
  border-radius: .1em;
}
.<%= baseClass %>-pull-left {
  float: left;
}
.<%= baseClass %>-pull-right {
  float: right;
}
.<%= baseClass %>-<%= baseClass %>-pull-left {
  margin-right: .3em;
}
.<%= baseClass %>-<%= baseClass %>-pull-right {
  margin-left: .3em;
}

.<%= baseClass %>-pulse {
  -webkit-animation: <%= baseClass %>-spin 1s infinite steps(8);
  animation: <%= baseClass %>-spin 1s infinite steps(8);
}
@-webkit-keyframes <%= baseClass %>-spin {
  0% {
	-webkit-transform: rotate(0deg);
	transform: rotate(0deg);
  }
  100% {
	-webkit-transform: rotate(359deg);
	transform: rotate(359deg);
  }
}
@keyframes <%= baseClass %>-spin {
  0% {
	-webkit-transform: rotate(0deg);
	transform: rotate(0deg);
  }
  100% {
	-webkit-transform: rotate(359deg);
	transform: rotate(359deg);
  }
}
.<%= baseClass %>-rotate-90 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}
.<%= baseClass %>-rotate-180 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}
.<%= baseClass %>-rotate-270 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg);
}
.<%= baseClass %>-flip-horizontal {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);
  -webkit-transform: scale(-1, 1);
  -ms-transform: scale(-1, 1);
  transform: scale(-1, 1);
}
.<%= baseClass %>-flip-vertical {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  -webkit-transform: scale(1, -1);
  -ms-transform: scale(1, -1);
  transform: scale(1, -1);
}
:root .<%= baseClass %>-rotate-90,
:root .<%= baseClass %>-rotate-180,
:root .<%= baseClass %>-rotate-270,
:root .<%= baseClass %>-flip-horizontal,
:root .<%= baseClass %>-flip-vertical {
  filter: none;
}
.<%= baseClass %>-stack {
  position: relative;
  display: inline-block;
  width: 2em;
  height: 2em;
  line-height: 2em;
  vertical-align: middle;
}
.<%= baseClass %>-stack-1x,
.<%= baseClass %>-stack-2x {
  position: absolute;
  left: 0;
  width: 100%;
  text-align: center;
}
.<%= baseClass %>-stack-1x {
  line-height: inherit;
}
.<%= baseClass %>-stack-2x {
  font-size: 2em;
}
.<%= baseClass %>-inverse {
  color: #ffffff;
}

<% if (iconsStyles) { %>/* Vars */<% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
<% if (stylesheet === 'scss') { %>$<%= classPrefix %>var-<%= glyphs[glyphIdx] %>:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";<% } } } %>
<% if (iconsStyles) { %>/* Icons */<% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
<% if (stylesheet === 'less') { %>
.<%= mixinPrefix %><%= glyphs[glyphIdx] %>() {
	&:before {
		content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
	}
	<% if (ie7) {%>
	*zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#x<%= codepoints[glyphIdx] %>;');
	<% } %>
}
.<%= baseClass %>-<%= glyphs[glyphIdx] %>{
	.<%= mixinPrefix %><%= glyphs[glyphIdx] %>();
}<% } else { %>
<% if (ie7) {%>.<%= glyphs[glyphIdx] %> {
	*zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#x<%= codepoints[glyphIdx] %>;');
}<% } %>
.<%= baseClass %>-<%= glyphs[glyphIdx] %>:before {
	content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
}<% } } } %>